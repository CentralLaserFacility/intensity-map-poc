<UserControl
  x:Class="IntensityProfileViewer.ViewerPanel_flat_UserControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:IntensityProfileViewer"
  xmlns:uwpUtils="using:UwpUtilities"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  d:DesignHeight="900"
  d:DesignWidth="1400"
  x:DefaultBindMode="OneWay"
>

  <Grid 
    Margin="0" 
    Padding="10" 
    ColumnSpacing="10" RowSpacing="10" 
    Background="{StaticResource ViewerPanelBackgroundBrush}"
  >

    <Grid.Resources>
      <ResourceDictionary>
        <!-- We want both graphs to be the same size -->
        <!-- so let's define a common size for the grid cells. -->
        <!-- MATTEO : Is there a better way to do this, eg binding the column value -->
        <!-- to the value that's defined in the Row ?? -->
        <!-- WOULD BE NICE TO USE A GRIDSPLITTER TO LET THE USER RESIZE THE GRAPHS -->
        <!-- Windows Community Toolkit has a GridSplitter, can we use that ?? -->
        <GridLength x:Key="GraphSize">150</GridLength>
      </ResourceDictionary>
    </Grid.Resources>

    <!-- Matteo - is this Height necessary ?? -->
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="{StaticResource GraphSize}"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{StaticResource GraphSize}"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="250"/>
    </Grid.ColumnDefinitions>

    <local:VerticalProfileGraph_UserControl
      x:Name="m_verticalProfileGraph_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="0" Grid.Column="0" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />

    <!--
    <local:HorizontalProfileGraph_XAML_UserControl 
    -->
    <local:HorizontalProfileGraph_UserControl 
      x:Name="m_horizontalProfileGraph_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="1" Grid.Column="1" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />

    <!-- 
      Matteo : because we're using x:Bind to set Grid.Column etc, the value is defaulting to 0 
      which means that the Image control is 'overwriting' the VerticalProfile graph that we expect to see
      in the left hand column. In x:Bind, the FallbackValue or TargetNull properties don't provide a way
      of declaring our desired 'default' to be Column=1.
      We could make the VerticalProfile graph appear, by moving this declaration to be earlier
      in the list of children, but that would just be papering over the issue ...
    -->
    <local:IntensityMapImage_UserControl 
      x:Name="m_intensityMapImage_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="0"
      Grid.Column="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,0)}" 
      Grid.RowSpan="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,2)}" 
      Grid.ColumnSpan="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,2)}" 
    />

    <Grid 
      Grid.Row="1" 
      Grid.Column="0" 
      Background="{StaticResource ProfileGraphBackgroundColour}" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />


    <!-- Right hand column containing the adjustment panels -->

    <StackPanel 
      Orientation="Vertical" 
      Background="{StaticResource ViewerPanelBackgroundBrush}"
      Grid.Row="0"  Grid.RowSpan="2"
      Grid.Column="2" 
      Spacing="10"
    >

      <local:ImagePresentationSettings_UserControl
        ViewModel="{x:Bind ViewModel.ImagePresentationSettings, Mode=OneWay}"
      />

      <local:ProfileDisplaySettings_UserControl
        ViewModel="{x:Bind ViewModel.CurrentSource.ProfileDisplaySettings, Mode=OneWay}"
      />

      <StackPanel Orientation="Horizontal" Spacing="10" >
        <Button Content="Reset Pan/Zoom" Click="ResetPanZoomButton_Click"/>
        <!-- MATTEO : best way to create a 'Settings' page ?? -->
        <!-- Modal dialog ?? Flyout ??? Modeless ?? -->
        <Button Content="Settings" IsEnabled="False"/>
        <!-- 
        <Button Content="Reset" />
        <Button Content="Test" Click="TestButton_Click"/>
        -->
      </StackPanel>

    </StackPanel>

  </Grid>

</UserControl>
