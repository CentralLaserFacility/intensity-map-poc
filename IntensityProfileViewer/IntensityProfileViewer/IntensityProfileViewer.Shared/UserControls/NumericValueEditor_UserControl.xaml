<UserControl
    x:Class="IntensityProfileViewer.NumericValueEditor_UserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IntensityProfileViewer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="120"
    d:DesignWidth="260"
    x:DefaultBindMode="OneWay"
>

  <Grid Background="{StaticResource Brush_LightSeaGreen}" Padding="10" ColumnSpacing="10" RowSpacing="10">

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="80"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <!-- To set the background colour, have to use a Border ... -->
    <!-- And without a Margin, the text is scrunched up aginst the edges -->
    <Border 
      Grid.Row="0"
      Grid.Column="0"
      Grid.ColumnSpan="2"
      Background="{StaticResource Brush_Cornsilk}" 
    >
      <TextBlock Height="Auto" Text="{x:Bind ViewModel.DisplayName}" Margin="4"/>
    </Border>

    <!-- 
      If we want two-way binding to a ViewModel property that has
      both a Getter and a Setter, and the type is an exact match,
      then we can use x:Bind to that property with Mode=TwoWay.
      In other situations, eg when a type conversion is necessary
      or the 'set' is performed via a function call rather than a Setter,
      it's necessary to specify a function call for both aspects of the x:Bind.
      <TextBox 
        Width="120" 
        Text="{
          x:Bind GetStringValue(ViewModel.CurrentValueAsString), 
          Mode=TwoWay, 
          BindBack=ViewModel.SetCurrentValueFromString, 
          UpdateSourceTrigger=PropertyChanged
        }" 
      />
      -->

    <TextBox 
      Grid.Row="1"
      Grid.Column="0"
      Height="Auto"
      Background="{x:Bind GetErrorIndicationBrush(ViewModel.MostRecentSetAttemptFailed)}"
      Text="{
        x:Bind ViewModel.CurrentValueAsString, 
        Mode=TwoWay, 
        UpdateSourceTrigger=PropertyChanged
      }" 
      ToolTipService.ToolTip="{x:Bind ViewModel.ToolTipInfo}"
    />

    <Slider 
      Grid.Row="1"
      Grid.Column="1"
      Height="Auto"
      Minimum="{x:Bind ViewModel.MinValue}"  
      Maximum="{x:Bind ViewModel.MaxValue}" 
      StepFrequency="{x:Bind ViewModel.StepDelta}"
      Value="{x:Bind GetDoubleValue(ViewModel.CurrentValue), Mode=TwoWay, BindBack=ViewModel.SetCurrentValue}"
    />

  </Grid>

</UserControl>
