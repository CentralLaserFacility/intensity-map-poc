<UserControl
    x:Class="IntensityProfileViewer.IntensityMapImageAndProfileGraphs_UserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IntensityProfileViewer"
    xmlns:uwpUtils="using:UwpUtilities"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="900"
    x:DefaultBindMode="OneWay"
  >

  <Grid 
    Padding="10" 
    ColumnSpacing="10" 
    RowSpacing="10" 
    Background="{StaticResource ViewerPanelBackgroundBrush}" 
  >

    <Grid.RowDefinitions>
      <RowDefinition Height="4*"/>
      <RowDefinition Height="1*"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="1*"/>
      <ColumnDefinition Width="4*"/>
    </Grid.ColumnDefinitions>

    <local:VerticalProfileGraph_UserControl
      x:Name="m_verticalProfileGraph_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="0" Grid.Column="0" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />

    <!--
    <local:HorizontalProfileGraph_XAML_UserControl 
    -->
    <local:HorizontalProfileGraph_UserControl 
      x:Name="m_horizontalProfileGraph_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="1" Grid.Column="1" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />

    <!-- 
      Matteo : because we're using x:Bind to set Grid.Column etc, the value is defaulting to 0 
      which means that the Image control is 'overwriting' the VerticalProfile graph that we expect to see
      in the left hand column. In x:Bind, the FallbackValue or TargetNull properties don't provide a way
      of declaring our desired 'default' to be Column=1.
      We could make the VerticalProfile graph appear, by moving this declaration to be earlier
      in the list of children, but that would just be papering over the issue ...
    -->
    <local:IntensityMapImage_UserControl 
      x:Name="m_intensityMapImage_UserControl" 
      ViewModel="{x:Bind ViewModel.CurrentSource, Mode=OneWay}"
      Grid.Row="0"
      Grid.Column="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,0)}" 
      Grid.RowSpan="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,2)}" 
      Grid.ColumnSpan="{x:Bind ChooseIntegerValue(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs,1,2)}" 
    />

    <!-- 
      <Rectangle 
        Grid.Row="1" Grid.Column="0" 
        Fill="LightGray" 
        Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
      />
    -->

    <!-- 
    <Image 
      Source="{x:Bind uwpUtils:BitmapHelpers.CreateWriteableBitmap(ViewModel.CurrentSource.MostRecentlyAcquiredIntensityMap,ViewModel.ImagePresentationSettings.ColourMapOption), Mode=OneWay}"
      Grid.Row="1" Grid.Column="0" 
      Stretch="UniformToFill"
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    />
    -->

    <Grid 
      Grid.Row="1" 
      Grid.Column="0" 
      Background="{StaticResource ProfileGraphBackgroundColour}" 
      Visibility="{x:Bind VisibleWhen(ViewModel.CurrentSource.ProfileDisplaySettings.ShouldShowProfileGraphs)}"
    >
    <!-- 
      <Button 
        HorizontalAlignment="Center"
        Content="Reset Pan/Zoom"
        Click="ResetPanZoomButton_Click"
      />
    -->
    </Grid>

  </Grid>

</UserControl>

