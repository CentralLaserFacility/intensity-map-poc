<UserControl
    x:Class="NativeUwp_ViewerApp_01.NumericValueEditor_UserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NativeUwp_ViewerApp_01"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="70"
    d:DesignWidth="260"
    x:DefaultBindMode="OneWay"
>

  <StackPanel Orientation="Vertical" Background="LightSeaGreen">

    <Border Background="Cornsilk">
      <TextBlock Text="{x:Bind ViewModel.DisplayName}" />
    </Border>

    <StackPanel Orientation="Horizontal" Spacing="10" Margin="10">
        
      <Slider 
        Width="100" 
        HorizontalAlignment="Left"
        Minimum="{x:Bind ViewModel.MinValue}"  
        Maximum="{x:Bind ViewModel.MaxValue}" 
        StepFrequency="{x:Bind ViewModel.StepDelta}"
        Value="{x:Bind GetDoubleValue(ViewModel.CurrentValue), BindBack=ViewModel.SetCurrentValue, Mode=TwoWay}"
      />

      <!-- Hmm, how to make the text box fill the remaining available width ??? -->
      <!-- Nothing reasonable seems to work ; got to use a Grid ??? -->
      <!-- HorizontalAlignment="Stretch" -->
      <!-- 
        If we want two-way binding to a ViewModel property that has
        both a Getter and a Setter, and the type is an exact match,
        then we can use x:Bind to that property with Mode=TwoWay.
        In other situations, eg when a type conversion is necessary
        or the 'set' is performed via a function call rather than a Setter,
        it's necessary to specify a function call for both aspects of the x:Bind.
        <TextBox 
          Width="120" 
          Text="{
            x:Bind GetStringValue(ViewModel.CurrentValueAsString), 
            Mode=TwoWay, 
            BindBack=ViewModel.SetCurrentValueFromString, 
            UpdateSourceTrigger=PropertyChanged
          }" 
        />
      -->
      <TextBox 
        Width="120" 
        Background="{x:Bind GetErrorIndicationBrush(ViewModel.MostRecentSetAttemptFailed)}"
        Text="{
          x:Bind ViewModel.CurrentValueAsString, 
          Mode=TwoWay, 
          UpdateSourceTrigger=PropertyChanged
        }" 
      />

    </StackPanel>

  </StackPanel>

</UserControl>
