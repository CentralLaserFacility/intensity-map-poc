<UserControl
    x:Class="NativeUwp_ViewerApp_01.ImagePresentationSettings_UserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NativeUwp_ViewerApp_01"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="280"
    d:DesignWidth="200">

    <Grid Background="LightYellow">

      <StackPanel Orientation="Vertical">
      
       <TextBox Text="Image presentation settings" HorizontalAlignment="Center"/>

       <!-- 
       <ComboBox Header="Colour map" Width="160" >
         <x:String>GreyScale</x:String> 
         <x:String>Jet</x:String> 
       </ComboBox>
       -->

       <!-- 
         The proper value is not shown until the selection is changed
         ... even though the ColourMapOption we're binding to does have 
         a valid value ...
         None of these experiments has worked :
         SelectedItem="{x:Bind ViewModel.ColourMapOption, Mode=TwoWay}"
         SelectedValue="{x:Bind ViewModel.ColourMapOption, Mode=TwoWay}"
         SelectedIndex="0"
         IsSynchronizedWithCurrentItem="True" [ null reference exception !! ]
         Tried this, doesn't even compile :
         https://alski.net/2016/07/21/uwp-combobox-selecteditem-doesnt-bind/
       
         Apparently you have to set ItemsSource first
         see https://alski.net/2016/07/21/uwp-combobox-selecteditem-doesnt-bind/

         Another post says
         Trust me, ComboBox and enum in UWP is a bad idea. 
         Save yourself some time, don't use enum on a combobox in UWP.

       -->
       <!-- 
      <ComboBox Header="Colour map" Width="160" 
         ItemsSource="{x:Bind ColourMapOptions}"
         SelectedItem="{x:Bind ViewModel.ColourMapOption, Mode=TwoWay}"
         SelectedValue="{x:Bind Path=ViewModel.ColourMapOption, Mode=TwoWay}"
         DisplayMemberPath="Name"
         SelectedValuePath="Value"
       />
       -->
      <ComboBox Header="Colour map" Width="160" 
         ItemsSource="{x:Bind ViewModel.ColourMapOptionNames}"
         SelectedValue="{x:Bind ViewModel.ColourMapOptionName, Mode=TwoWay}"
       />

      <!-- 
      // Compile error : Unexpected BindBack found
      <ComboBox Header="Colour map xx" Width="160" 
         ItemsSource="{x:Bind ColourMapOptionNames}"
         SelectedItem="{x:Bind ColourMapOptionName, Mode=TwoWay, BindBack=SetColourMapOptionFromName}"
      />

      -->
      <ComboBox Header="Colour map xx" Width="160" 
         ItemsSource="{x:Bind ColourMapOptionNames}"
         SelectedValue="{x:Bind GetColourMapOptionName(), Mode=TwoWay, BindBack=SetColourMapOptionFromName}"
       />

      <ComboBox Header="Normalisation mode" Width="160" 
         ItemsSource="{x:Bind NormalisationModeOptions}"
         DisplayMemberPath="Name"
         SelectedValuePath="Value"
         SelectedValue="{x:Bind ViewModel.NormalisationMode, Mode=TwoWay}"
       />

       <!-- The 'CanSetNormalisationValue' is definitely getting changed, -->
       <!-- and the ViewModel is publishing the change ... but the 'IsEnabled' -->
       <!-- property is NOT getting updated ... -->
       <Slider 
         x:Name="m_normalisationValueSlider"
         HorizontalAlignment="Left"
         Minimum="0" Maximum="255" Width="160" Header="Normalisation value"
         Value="{x:Bind ViewModel.NormalisationValue, Mode=OneWay}"
         ValueChanged="Slider_ValueChanged"
         IsEnabled="{x:Bind ViewModel.CanSetNormalisationValue, Mode=OneWay}"
         IsEnabledChanged="m_normalisationValueSlider_IsEnabledChanged"
       />

       <Button 
         Content="Just testing" 
         IsEnabled="{x:Bind ViewModel.CanSetNormalisationValue, Mode=OneWay}"
       />

       <local:NumericValueEditor_UserControl />

     </StackPanel>

    </Grid>
</UserControl>
