//
// _Notes.txt
//

This project defines concrete ViewModel classes that implement the 'IViewModel' interfaces defined in the 'DomainDefinitions' project.

These implementations are as simple as we can get away with for the purposes of the Uno 'proof-of-concept' project. In many cases the ViewModel just provides 'fake' data held in memory, whereas in the real implementation we'd connect to a 'model' class.

The view models are structured as a tree. A parent knows about its children, and a child also knows about its parent. This lets a child access properties and methods anywhere in the tree, which is convenient although it does mean that the classes are strongly coupled. Perhaps better to use Messenger instead ? But although that's fine for raising events, you can't easily query a property value in a different view model.





